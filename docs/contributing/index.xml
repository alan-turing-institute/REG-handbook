<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Contributing on REG Handbook</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/</link><description>Recent content in Contributing on REG Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://alan-turing-institute.github.io/REG-handbook/docs/contributing/index.xml" rel="self" type="application/rss+xml"/><item><title>Discussions and Issues</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/discussions_and_issues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/discussions_and_issues/</guid><description>Discussions and Issues # Contributing does not only mean adding code or writing pages. Being involved in reporting issues and discussing ideas are important and valuable aspects to contributing. The handbook uses both issues and discussions on GitHub.
Discussions # The handbook Discussions are the best place for informal talk about the handbook.
You should feel welcome to create a discussion on any relevant topic, without the formality of an issue.</description></item><item><title>Recognising Contributions</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/recognising_contributions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/recognising_contributions/</guid><description>Recognising Contributions # We aim to recognise all contributions to the handbook, not just those made through commits. For that purpose we use All Contributors to help manage a record of who has contributed to the book and how.
Use the &amp;lsquo;add&amp;rsquo; command in an issue or pull-request comment to ask @all-contributors to add a contributor
@all-contributors please add @&amp;lt;username&amp;gt; for &amp;lt;contributions&amp;gt; See the bot usage documentation for full details and more examples.</description></item><item><title>Getting Started</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/getting_started/</guid><description>Getting Started # Install dependencies # To contribute to the handbook you will need
Git Hugo (You will need the extended version with Sass/SCSS support) Your favourite text editor Optionally markdownlint; see the Style Guide for more details. Clone the repository # Clone the repository with one of the following options (depending on how you authenticate with GitHub):
SSH authentication git clone --recurse-submodules git@github.com:alan-turing-institute/REG-handbook.git cd REG-handbook HTTPS authentication git clone --recurse-submodules https://github.</description></item><item><title>Style Guide</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/style_guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/style_guide/</guid><description>Style Guide # Semantic Line Breaks # It is encouraged to use Semantic Line Breaks when writing for the handbook. This improves the readability of source files and make diffs clearer. The Semantic Line Breaks specification explains the rules and reasoning. The most important rules are,
A semantic line break MUST occur after a sentence, as punctuated by a period (.), exclamation mark (!), or question mark (?). A semantic line break SHOULD occur after an independent clause as punctuated by a comma (,), semicolon (;), colon (:), or em dash (â€”).</description></item><item><title>Adding New Content</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/creating_a_page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/creating_a_page/</guid><description>Adding New Content # How Hugo Arranges Content # Pages are build from content files in the content/ directory. Hugo automatically gives pages a URL based on the organisation of files in the content/ directory.
In Hugo, the first directory after content/ is significant and defines the content type. All handbook pages should be nested in the content/docs/ directory.
Sections may be created in content/docs/ (to any depth) by creating a directory containing a content file called _index.</description></item><item><title>Editing a Page</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/editing_a_page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/editing_a_page/</guid><description>Editing a Page # If you followed the instructions in the Getting Started section to checkout the repository and serve the handbook locally you can edit a page locally. However, as you may have noticed, at the bottom of each page is a link to edit the page in the GitHub web editor if you would prefer. This may be easy for making small changes.
Pages # Each page is a Markdown file with YAML front matter followed by the page contents in Markdown.</description></item><item><title>Contributing Changes</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/contributing_changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/contributing_changes/</guid><description>Contributing Changes # Once you have made changes, you will need to contribute them back to the remote repository. This page explains the process of pushing your changes back to the remote, and how your contribution will be checked in the CI and review process.
The handbook users the GitHub flow workflow. In short
create a branch make changes open pull request review merge to main This workflow should help changes be deployed quickly.</description></item><item><title>Reviewing Changes</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/reviewing_changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/reviewing_changes/</guid><description>Reviewing Changes # The review process helps to ensure high quality and catch problems in contributions. When acting as a reviewer, you should see your position as sharing your knowledge and working with the contributors to achieve the best possible result. Reviewing should not be an adversarial process.
Recognising Contributions # When reviewing a pull request you should try to make sure everyone&amp;rsquo;s work is recognised. See the Recognising Contributions page for how to do this.</description></item><item><title>Advanced</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/contributing/advanced/</guid><description>Advanced # Using Data # Through using templates Hugo can build page content from datafiles. This is particularly useful for when you want to display structured data in a page and when it would be easier to maintain a datafile rather than a Markdown or HTML document.
Creating Shortcodes # It is possible to create your own shortcodes. These should be placed in layouts/shortcodes/ .
If you feel the need to use HTML or want to create page content from a datafile (like a YAML file or csv) then a shortcode is probably the right answer.</description></item></channel></rss>