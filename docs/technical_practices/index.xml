<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Common Technical Practices on REG Handbook</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/</link><description>Recent content in Common Technical Practices on REG Handbook</description><generator>Hugo</generator><language>en-gb</language><atom:link href="https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/index.xml" rel="self" type="application/rss+xml"/><item><title>Changelogs and Semantic Versioning</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/change_logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/change_logs/</guid><description>Changelogs # For any non-trivial code, it is worth maintaining a Changelog. This is valuable as it is a record of changes from the perspective of users (rather than git commit messages which are often only meaningful to the developers involved). A recommended format for Changelog files is given at Keep a changelog. All notable changes to a project should be documented in this file.
Semantic Versioning # A related concept is semantic versioning.</description></item><item><title>Python Tools and Practices</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/python/</guid><description>Python Tools and Practices # Python is a widely used language within REG. Below are some useful tools to help you configure your repo (with links to examples).
Some of the topics discussed below are not exclusive to Python. As more content is added to the manual they should be separated out into their own pages. Autoformatters / Linters # There are many widely used autoformatter and linters for Python, which can be used as standalone tools or call from .</description></item><item><title>Configuring Your Editor</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/configuring_editors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/configuring_editors/</guid><description>Configuring Your Editor # Many people will configure their editor to suit their own needs and preferences.
It is possible to do this so that there are common standards between collaborators in the code base, while allowing for differences in individuals&amp;rsquo; configurations.
Some of the topics discussed below are heavily focused on python development. In due course we should generalise this to cover other languages. General # Some common, particular formatting/encoding options can be configured for a range of editors/IDEs by using EditorConfig in your repo.</description></item><item><title>Software Development</title><link>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/software_dev_best_practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alan-turing-institute.github.io/REG-handbook/docs/technical_practices/software_dev_best_practice/</guid><description>Software Development Best Practices # Status: this document is a draft proposal.
RSE projects # There should be a GitHub issue for each thing we do. Itâ€™s ok for issues to evolve and my preference would be that the top description box always has the most up to date, clearest description of the issue and its definition of done. Feel free to make liberal use of the comments for communication and tracking investigative / exploratory work.</description></item></channel></rss>